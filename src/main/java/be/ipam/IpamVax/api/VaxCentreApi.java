/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package be.ipam.IpamVax.api;

import be.ipam.IpamVax.api.model.VaxCentre;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@Validated
@Api(value = "VaxCentre", description = "the VaxCentre API")
public interface VaxCentreApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * PUT /api/v1/vaxcentre : Create the VaxCentre
     * create the VaxCentre
     *
     * @param vaxCentre VaxCentre object (optional)
     * @return Created (status code 201)
     */
    @ApiOperation(value = "Create the VaxCentre", nickname = "createVaxCentre", notes = "create the VaxCentre", tags={ "VaxCentre", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created") })
    @RequestMapping(value = "/api/v1/vaxcentre",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<VaxCentre> createVaxCentre(@ApiParam(value = "VaxCentre object"  )  @Valid @RequestBody(required = false) VaxCentre vaxCentre) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /api/v1/vaxcentre/{vaxCentreId} : Delete the VaxCentre
     * Delete a VaxCentre
     *
     * @param vaxCentreId people Identifier (required)
     * @return No content (status code 204)
     */
    @ApiOperation(value = "Delete the VaxCentre", nickname = "deleteVaxCentreById", notes = "Delete a VaxCentre", tags={ "VaxCentre", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No content") })
    @RequestMapping(value = "/api/v1/vaxcentre/{vaxCentreId}",
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteVaxCentreById(@ApiParam(value = "people Identifier",required=true) @PathVariable("vaxCentreId") Integer vaxCentreId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/v1/vaxcentre/{vaxCentreId} : Get a vaxcentre
     * Get a vaxcenter
     *
     * @param vaxCentreId Vaxcentre Identifier (required)
     * @return successful operation (status code 200)
     *         or Given vaxcentre ID doesn&#39;t exist (status code 404)
     */
    @ApiOperation(value = "Get a vaxcentre", nickname = "getVaxCenterById", notes = "Get a vaxcenter", response = VaxCentre.class, tags={ "VaxCentre", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = VaxCentre.class),
        @ApiResponse(code = 404, message = "Given vaxcentre ID doesn't exist") })
    @RequestMapping(value = "/api/v1/vaxcentre/{vaxCentreId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<VaxCentre> getVaxCenterById(@ApiParam(value = "Vaxcentre Identifier",required=true) @PathVariable("vaxCentreId") Integer vaxCentreId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"vaxCentreId\" : 1.4658129805029452, \"addressStreet\" : \"addressStreet\", \"peopleSchedules\" : [ null, null ], \"name\" : \"name\", \"addressNumber\" : \"addressNumber\", \"addressCity\" : \"addressCity\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /api/v1/vaxcentre/{vaxCentreId} : Create the VaxCentre
     * update the VaxCentre
     *
     * @param vaxCentreId VaxCentre Identifier (required)
     * @param vaxCentre VaxCentre object (optional)
     * @return Updated (status code 200)
     */
    @ApiOperation(value = "Create the VaxCentre", nickname = "updateVaxCentre", notes = "update the VaxCentre", tags={ "VaxCentre", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Updated") })
    @RequestMapping(value = "/api/v1/vaxcentre/{vaxCentreId}",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> updateVaxCentre(@ApiParam(value = "VaxCentre Identifier",required=true) @PathVariable("vaxCentreId") Integer vaxCentreId,@ApiParam(value = "VaxCentre object"  )  @Valid @RequestBody(required = false) VaxCentre vaxCentre) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
