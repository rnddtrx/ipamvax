/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package be.ipam.IpamVax.api;

import be.ipam.IpamVax.api.model.Vaccin;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@Validated
@Api(value = "Vaccin", description = "the Vaccin API")
public interface VaccinApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * PUT /api/v1/vaccin : Create the vaccin
     * create the vaccin
     *
     * @param vaccin vaccin object (optional)
     * @return Created (status code 201)
     */
    @ApiOperation(value = "Create the vaccin", nickname = "createVaccin", notes = "create the vaccin", tags={ "Vaccin", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created") })
    @RequestMapping(value = "/api/v1/vaccin",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<Vaccin> createVaccin(@ApiParam(value = "vaccin object"  )  @Valid @RequestBody(required = false) Vaccin vaccin) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /api/v1/vaccin/{vaccinId} : Delete the Vaccin
     * Delete a Vaccin
     *
     * @param vaccinId vaccin Identifier (required)
     * @return No content (status code 204)
     */
    @ApiOperation(value = "Delete the Vaccin", nickname = "deleteVaccinById", notes = "Delete a Vaccin", tags={ "Vaccin", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No content") })
    @RequestMapping(value = "/api/v1/vaccin/{vaccinId}",
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteVaccinById(@ApiParam(value = "vaccin Identifier",required=true) @PathVariable("vaccinId") Integer vaccinId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/v1/vaccin/{vaccinId} : Get a vaccin
     * Get a vaxcenter
     *
     * @param vaccinId Vaccin Identifier (required)
     * @return successful operation (status code 200)
     *         or Given vaccin ID doesn&#39;t exist (status code 404)
     */
    @ApiOperation(value = "Get a vaccin", nickname = "getVaccinById", notes = "Get a vaxcenter", response = Vaccin.class, tags={ "Vaccin", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Vaccin.class),
        @ApiResponse(code = 404, message = "Given vaccin ID doesn't exist") })
    @RequestMapping(value = "/api/v1/vaccin/{vaccinId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Vaccin> getVaccinById(@ApiParam(value = "Vaccin Identifier",required=true) @PathVariable("vaccinId") Integer vaccinId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"vaccinId\" : 0.8008281904610115, \"ageMin\" : 6, \"name\" : \"name\", \"doseMin\" : 1, \"booster\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /api/v1/vaccin/{vaccinId} : Create the Vaccin
     * update the Vaccin
     *
     * @param vaccinId Vaccin Identifier (required)
     * @param vaccin Vaccin object (optional)
     * @return Updated (status code 200)
     */
    @ApiOperation(value = "Create the Vaccin", nickname = "updateVaccin", notes = "update the Vaccin", tags={ "Vaccin", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Updated") })
    @RequestMapping(value = "/api/v1/vaccin/{vaccinId}",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> updateVaccin(@ApiParam(value = "Vaccin Identifier",required=true) @PathVariable("vaccinId") Integer vaccinId,@ApiParam(value = "Vaccin object"  )  @Valid @RequestBody(required = false) Vaccin vaccin) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
